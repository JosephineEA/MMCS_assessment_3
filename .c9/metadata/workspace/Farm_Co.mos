{"changed":false,"filter":false,"title":"Farm_Co.mos","tooltip":"/Farm_Co.mos","value":"model Farm_Co\nuses \"mmxprs\"\n! Assessment 3: 04/11/2022, Josephine Li, s2346729\n\n! --- declarations ---!\n  declarations\n    ! index\n    activities = 1..4\n    lands = 1..10\n    crops = 1..3\n    years = 1..10\n\n    ! parameters\n    lands_size: array(lands) of real !m*m\n\n    crops_name: array(crops) of string\n    crops_yield: array(crops) of real ! kg/m*m\n    crops_sewing_costs: array(crops) of real ! pound/m*m\n    crops_pirce: array(crops) of real ! pound/kg\n\n    ! cows_sell_price: array(1..10) of real\n    cows_sell_price: array(years) of real\n    calf_purchase = 200 ! pound\n    cows_space = 5 ! m*m\n    cows_grain = 15 ! kg/year\n    grain_price = 50 ! pound/kg\n\n    ! variables\n    plant: array(crops,years,lands) of mpvar ! plant units m*m\n    rear: array(years, lands) of mpvar ! the cows rear in the farm each years\n    calf: array(years) of mpvar ! the amount of calfs bought in the start of each years\n\n    ! auxiliary variables\n    x: array(activities,lands,years) of mpvar ! {0,1}\n\n    ! extra constrains variables\n    plant_grain: array(years) of mpvar ! plant grain for cow\n    bought_grain: array(years) of mpvar ! bought for cow\n  end-declarations\n\n! --- initialisations --- !\n  initialisations from \"Farm_Co.dat\"\n    crops_name lands_size crops_yield crops_sewing_costs cows_sell_price crops_pirce\n  end-initialisations\n\n\n! --- constrains --- !\n! cows and calfs are integer！\n  forall(y in years, l in lands,c in crops,a in activities) do\n    x(a,l,y) is_binary\n    calf(y) is_integer\n    rear(y,l) is_integer\n    plant(c,y,l) >= 0\n    rear(y,l) >= 0\n    calf(y) >= 0\n    plant_grain(y) >= 0\n    bought_grain(y) >= 0\n  end-do\n\n! arrangement of activity (1 block of land only use in 1 activity)\nforall(y in years,l in lands)\n  sum(a in activities) x(a,l,y) <= 1\n\n! the relation beween total cows amount and new calf\nforall(y in years) do\n  if y = 1 then\n    sum(l in lands) rear(y,l) = calf(y)\n  else\n    sum(l in lands) rear(y,l) = sum(l in lands)rear((y-1),l) + calf(y)\n  end-if\nend-do\n\n! grain: relation between bought grain and planted grain, grain to feed and grain to sell\nforall(y in years) do\n  if y = 1 then\n    sum(l in lands) rear(y,l)*cows_grain <= bought_grain(y)\n  else\n    sum(l in lands) rear(y,l)*cows_grain <= plant_grain(y-1) + bought_grain(y)\n  end-if\nend-do\nforall(y in years) do\n  sum(l in lands) plant(1,y,l)*3 >= plant_grain(y)\nend-do\n\n! the size limite\nforall(y in years,l in lands) do\n  plant(1,y,l) <= lands_size(l)*x(1,y,l)\n  plant(2,y,l) <= lands_size(l)*x(2,y,l)\n  plant(3,y,l) <= lands_size(l)*x(3,y,l)\n  rear(y,l)*5 <= lands_size(l)*x(4,y,l)\nend-do\n\n! 50% constrain( 50% of total land: from week7 piazza)\nforall(c in crops,y in years) do\n  sum(l in lands)plant(c,y,l) <= sum(l in lands)lands_size(l)*0.5\n  sum(l in lands)(rear(y,l)*cows_space) <= sum(l in lands)lands_size(l)*0.5\nend-do\n\n! --- objective function ---!\n  cows_profit:= sum(y in years)calf(y)*cows_sell_price(y)\n  crops_profit:= sum(c in crops,y in years,l in lands)plant(c,y,l)*crops_yield(c)*crops_pirce(c)\n  cows_costs:= sum(y in years) calf(y)*200\n  plant_costs:= sum(c in crops,y in years,l in lands)plant(c,y,l)*crops_sewing_costs(c)\n  grain_costs:= sum(y in years) plant_grain(y)*4.5 + sum(y in years)bought_grain(y)*50\n\n  profit:= cows_profit + crops_profit - cows_costs - plant_costs - grain_costs\n  ! incomes(selling cows and crops, minus grains plant for cows) - costs(crops, buy clafs, buy grains)\n\n\n! --- problem type --- !\n  maximise(profit)\n\n! --- outputs --- !\n! Overview results\nwriteln(\"The profit is: \",getobjval)\n\nwriteln(\"This is the plan for planting crops:\")\nforall(y in years, c in crops, l in lands) do\n  if getsol(plant(c,y,l))>0 then\n    writeln(\"plant \",getsol(plant(c,y,l)),\" \",crops_name(c),\" on land \",l,\" in year\",y)\n  end-if\nend-do\n\nwriteln\nwriteln(\"This is the plan for rearing cows:\")\nforall(y in years) do\n  if getsol(calf(y)) > 0 then\n    writeln(\"buy \",getsol(calf(y)),\" calf in year\",y)\n  end-if\nend-do\n\nwriteln\nforall(y in years,l in lands) do\n  if getsol(rear(y,l)) > 0 then\n    writeln(\"rear \",getsol(rear(y,l)),\" cows on land \",l,\" in year \",y)\n  end-if\nend-do\n\nwriteln\nif sum(y in years)getsol(bought_grain(y)) = 0 then\n  writeln(\"do not buy grain\")\nelse\n  forall(y in years) do\n    writeln(\"bug \",getsol(bought_grain(y)),\" grain in year \",y)\n  end-do\nend-if\nend-model","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":1334.5,"scrollleft":0,"selection":{"start":{"row":46,"column":6},"end":{"row":46,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":82,"state":"start","mode":"plugins/fico.ide.language.mosel/mode/mosel"}},"timestamp":1667819111476}